<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllowComments" xml:space="preserve">
    <value>Allow comments</value>
  </data>
  <data name="ArticleHeading" xml:space="preserve">
    <value>Article Heading</value>
  </data>
  <data name="ArticleIntro" xml:space="preserve">
    <value>Introduction</value>
  </data>
  <data name="ConfigureMenu" xml:space="preserve">
    <value>Configure Site!</value>
  </data>
  <data name="ContainerHeading" xml:space="preserve">
    <value>Listing Header</value>
  </data>
  <data name="DeletePage" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DocumentSaved" xml:space="preserve">
    <value>Your document was successfully saved!</value>
  </data>
  <data name="EndPublish" xml:space="preserve">
    <value>End Publish</value>
  </data>
  <data name="FileManagerFilterByExtension" xml:space="preserve">
    <value>Filter by type</value>
  </data>
  <data name="FileManagerFilterByFreeText" xml:space="preserve">
    <value>Filter by file name</value>
  </data>
  <data name="FileManagerTopTips" xml:space="preserve">
    <value>Drag files to the panel or click the upload button</value>
  </data>
  <data name="FileManagerUploadNew" xml:space="preserve">
    <value>Upload a new file</value>
  </data>
  <data name="FilesMenu" xml:space="preserve">
    <value>Manage Files</value>
  </data>
  <data name="FileUploadButtonText" xml:space="preserve">
    <value>Click or drag and drop files to this pane.</value>
  </data>
  <data name="ImageCarousel" xml:space="preserve">
    <value>Image Serie</value>
  </data>
  <data name="LeftMenuWelcome" xml:space="preserve">
    <value>What now ?</value>
  </data>
  <data name="LeftMenuWelcomeText" xml:space="preserve">
    <value>Publishing a page would be a good start, or maybe define a new document type...</value>
  </data>
  <data name="MenuConfigPageTypes" xml:space="preserve">
    <value>Page Types</value>
  </data>
  <data name="MenuConfigure" xml:space="preserve">
    <value>Configure</value>
  </data>
  <data name="MenuDashBoard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="MenuFiles" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="MenuMyFiles" xml:space="preserve">
    <value>My Files</value>
  </data>
  <data name="MenuPublishNew" xml:space="preserve">
    <value>Publish</value>
  </data>
  <data name="MenuSecurity" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="MenuSecurityRoles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="MenuSecurityUsers" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="MenuUploadFiles" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="NoRevisions" xml:space="preserve">
    <value>There are no revisions saved for this document yet!</value>
  </data>
  <data name="NoUpload" xml:space="preserve">
    <value>You need to save this document before you can add files / images.</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Sort Order</value>
  </data>
  <data name="PageDefaultEditor" xml:space="preserve">
    <value>Page Content</value>
  </data>
  <data name="PageID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="PageName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PageStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="PublishNew" xml:space="preserve">
    <value>Publish New!</value>
  </data>
  <data name="RevisionHide" xml:space="preserve">
    <value>Hide this</value>
  </data>
  <data name="RevisionLastMod" xml:space="preserve">
    <value>Last Modified</value>
  </data>
  <data name="RevisionSize" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="RevisionStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="RevisionUseThis" xml:space="preserve">
    <value>Use this revision</value>
  </data>
  <data name="RevisionViewThis" xml:space="preserve">
    <value>View Revision</value>
  </data>
  <data name="SaveDraftPage" xml:space="preserve">
    <value>Save Draft</value>
  </data>
  <data name="SavePage" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SavePublishPage" xml:space="preserve">
    <value>Save and Publish</value>
  </data>
  <data name="SelectedOrNot" xml:space="preserve">
    <value>On/Off</value>
  </data>
  <data name="ShowInMenus" xml:space="preserve">
    <value>Show in menu</value>
  </data>
  <data name="StartPublish" xml:space="preserve">
    <value>Start Publish</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="TagsDelete" xml:space="preserve">
    <value>Delete this tag!</value>
  </data>
  <data name="ValidationPageNameLength" xml:space="preserve">
    <value>Page Name is required!</value>
  </data>
  <data name="ValidationPageNameRequired" xml:space="preserve">
    <value>The Page Name field is required!</value>
  </data>
  <data name="ValidationStartPublishRequired" xml:space="preserve">
    <value>The start publish property is required!</value>
  </data>
  <data name="ViewDifferentVersions" xml:space="preserve">
    <value>Versions</value>
  </data>
  <data name="ViewPage" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="FileManagerLaunch" xml:space="preserve">
    <value>Add Images</value>
  </data>
  <data name="FileManagerNoMoreFilesAllowed" xml:space="preserve">
    <value>You have the maximum number of images attached to this page.</value>
  </data>
  <data name="PageImageListRemoveImage" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="FilePickerSaveSelected" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="PageConfirmDelete" xml:space="preserve">
    <value>Yes!</value>
  </data>
  <data name="PageConfirmDeleteSure" xml:space="preserve">
    <value>Are you sure? All selected files will be deleted!</value>
  </data>
  <data name="UnknownPublisher" xml:space="preserve">
    <value>Anonymous</value>
  </data>
  <data name="ByPrompt" xml:space="preserve">
    <value>by</value>
  </data>
  <data name="DatePrompt" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="PageCreatedBy" xml:space="preserve">
    <value>Created by</value>
  </data>
  <data name="PageCreatedDate" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="PageLastModifiedBy" xml:space="preserve">
    <value>Last modified by</value>
  </data>
  <data name="PageLastModifiedDate" xml:space="preserve">
    <value>Last modified</value>
  </data>
  <data name="ValidationPageNameAllowedChars" xml:space="preserve">
    <value>Allowed: letters, numbers, spaces, dashes</value>
  </data>
  <data name="FileManagerFilesWasDeleted" xml:space="preserve">
    <value>{0} files was successfully deleted</value>
  </data>
  <data name="FileManagerUploadedDescription" xml:space="preserve">
    <value>Uploaded file</value>
  </data>
  <data name="PageUrlSlug" xml:space="preserve">
    <value>Url-Slug</value>
  </data>
  <data name="FileDocumentContentType" xml:space="preserve">
    <value>Content type</value>
  </data>
  <data name="FileDocumentFileName" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="ImageApplyGrayscale" xml:space="preserve">
    <value>Grayscale</value>
  </data>
  <data name="ImageApplySepia" xml:space="preserve">
    <value>Sepia</value>
  </data>
  <data name="ImageApplyEffect" xml:space="preserve">
    <value>Apply Effect</value>
  </data>
  <data name="ImageApplyRotate" xml:space="preserve">
    <value>Rotate</value>
  </data>
  <data name="DashboardDeleteCurrent" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DashboardEditCurrent" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="DashboardViewCurrent" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="DashboardStatusFilterAll" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="DashboardStatusFilterDrafts" xml:space="preserve">
    <value>Drafts</value>
  </data>
  <data name="DashboardStatusFilterLabel" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="DashboardStatusFilterPublished" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="DashboardTextFilterLabel" xml:space="preserve">
    <value>Find documents</value>
  </data>
  <data name="PageTypeDisplayArticle" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="PageTypeDisplayContainer" xml:space="preserve">
    <value>Container</value>
  </data>
  <data name="DashBoardHeader" xml:space="preserve">
    <value>Your content</value>
  </data>
  <data name="FileManagerEditFileApply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="ValidationPagePropertyRequired" xml:space="preserve">
    <value>Field is required</value>
  </data>
  <data name="ValidationPagePropertyRequiredAndLength" xml:space="preserve">
    <value>Field must be between {0} and {1} characters in length</value>
  </data>
  <data name="ValidationPageDateTime" xml:space="preserve">
    <value>Not a valid date</value>
  </data>
  <data name="PagePermissions" xml:space="preserve">
    <value>Permission</value>
  </data>
  <data name="PermissionSetAdmin" xml:space="preserve">
    <value>Deny</value>
  </data>
  <data name="PermissionSetElevated" xml:space="preserve">
    <value>Elevated</value>
  </data>
  <data name="PermissionSetNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="PageNotPublished" xml:space="preserve">
    <value>The page you requested is not available. It has either expired or is not yet published.</value>
  </data>
  <data name="MenuConfigureSocial" xml:space="preserve">
    <value>Social</value>
  </data>
  <data name="FacebookConfigApiKey" xml:space="preserve">
    <value>API Key</value>
  </data>
  <data name="FacebookConfigApiSecret" xml:space="preserve">
    <value>App Secret</value>
  </data>
  <data name="TwitterConfigConsumerKey" xml:space="preserve">
    <value>Consumer Key</value>
  </data>
  <data name="TwitterConfigConsumerSecret" xml:space="preserve">
    <value>Consumer Secret</value>
  </data>
  <data name="SaveSocialMediaSettings" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SocialMediaActiveLabel" xml:space="preserve">
    <value>Activate</value>
  </data>
  <data name="SocialMediaSettingsHeader" xml:space="preserve">
    <value>Social Media Settings</value>
  </data>
  <data name="SocialMediaSettingsHeaderDescription" xml:space="preserve">
    <value>When a social media is activated, a user will be able to write comments on your article by logging in to the social media service. Configuration at the social media developer site is required.</value>
  </data>
  <data name="TwitterConfigTokenSecret" xml:space="preserve">
    <value>Token Secret</value>
  </data>
</root>