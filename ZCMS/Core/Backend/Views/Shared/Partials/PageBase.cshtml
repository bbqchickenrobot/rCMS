@model ZCMS.Core.Business.Content.ZCMSPage
@System.Web.Optimization.Scripts.Render("~/bundles/BackendScriptsPage")
<div class="custom-properties-edit-wrap">
<div class="edit-unit">
<div class="edit-top-nw">
    @Html.Label(CMS_i18n.BackendResources.PageID):

    <span id="CurrentPage">@Html.DisplayFor(m => m.PageID)</span>

    @Html.Label(CMS_i18n.BackendResources.PageStatus):

    @Html.Label(Model.Status.ToString())
</div>
<div class="meta-unit">
<div class="meta-label">
    @CMS_i18n.BackendResources.PageCreatedBy
</div>
<div class="meta-label">
    @Model.WrittenBy
</div>
<div class="meta-label">
    @CMS_i18n.BackendResources.DatePrompt @Model.Created.ToString(String.Format("{0}", CMS_i18n.Formats.DateFormat))
</div>
</div>
<div class="meta-unit">
<div class="meta-label">
    @CMS_i18n.BackendResources.PageLastModifiedBy
</div>
<div class="meta-label">
    @Model.LastChangedBy
</div>
<div class="meta-label">
    @CMS_i18n.BackendResources.DatePrompt @Model.LastModified.ToString(String.Format("{0}", CMS_i18n.Formats.DateFormat))
</div>
</div>
<div class="edit-top-save">
    
    @if (TempData["DocumentSaved"] != null)
    {
        <div class="save-success">@TempData["DocumentSaved"].ToString()</div>
    }
</div>
</div>
<div class="edit-unit">
<div class="unit-label">
    @Html.LabelFor(model => model.StartPublish):
</div>
<div class="unit-unit">
    @Html.EditorFor(model => model.StartPublish)
    @Html.ValidationMessageFor(model => model.StartPublish)
</div>
<div class="unit-label">
    @Html.LabelFor(model => model.ShowInMenus):
</div>
<div class="unit-unit">
    @Html.EditorFor(model => model.ShowInMenus)
</div>
</div>
<div class="edit-unit">
<div class="unit-label">
    @Html.LabelFor(model => model.EndPublish):
</div>
<div class="unit-unit">
    @Html.EditorFor(model => model.EndPublish)
    @Html.ValidationMessageFor(model => model.EndPublish)
</div>
<div class="unit-label">
    @Html.LabelFor(model => model.AllowComments):
</div>
<div class="unit-unit">
    @Html.EditorFor(model => model.AllowComments)
</div>

</div>
<div class="edit-unit">
<div class="unit-label">
    @Html.LabelFor(model => model.UrlSlug)
</div>
<div class="unit-unit">
    /<span style="font-style: italic;" id="url-slug">@(!String.IsNullOrEmpty(Model.UrlSlug) ? Model.UrlSlug : String.Empty)</span>
    @Html.HiddenFor(m => m.UrlSlug)
</div>
</div>

<div class="page-edit-top">
<div class="edit-top-label">
    @Html.LabelFor(model => model.PageName):
</div>
<div class="edit-top-unit">
    @Html.EditorFor(model => model.PageName)
    @Html.ValidationMessageFor(model => model.PageName)
</div>
</div>
</div>